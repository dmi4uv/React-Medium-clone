[{"/Users/dmitry/Web/react-hooks/src/index.js":"1","/Users/dmitry/Web/react-hooks/src/App.js":"2","/Users/dmitry/Web/react-hooks/src/reportWebVitals.js":"3","/Users/dmitry/Web/react-hooks/src/pages/routes.js":"4","/Users/dmitry/Web/react-hooks/src/components/TopBar/index.js":"5","/Users/dmitry/Web/react-hooks/src/pages/article/index.js":"6","/Users/dmitry/Web/react-hooks/src/pages/golobalFeed/index.js":"7","/Users/dmitry/Web/react-hooks/src/pages/authentication/index.js":"8","/Users/dmitry/Web/react-hooks/src/hooks/useFetch.js":"9"},{"size":288,"mtime":1609905856000,"results":"10","hashOfConfig":"11"},{"size":332,"mtime":1609905856000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609905856000,"results":"13","hashOfConfig":"11"},{"size":492,"mtime":1609905856000,"results":"14","hashOfConfig":"11"},{"size":1010,"mtime":1609905856000,"results":"15","hashOfConfig":"11"},{"size":106,"mtime":1609905856000,"results":"16","hashOfConfig":"11"},{"size":107,"mtime":1609905856000,"results":"17","hashOfConfig":"11"},{"size":3509,"mtime":1609909002000,"results":"18","hashOfConfig":"11"},{"size":952,"mtime":1609909096000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iv2240",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},"/Users/dmitry/Web/react-hooks/src/index.js",[],"/Users/dmitry/Web/react-hooks/src/App.js",[],"/Users/dmitry/Web/react-hooks/src/reportWebVitals.js",[],"/Users/dmitry/Web/react-hooks/src/pages/routes.js",["41"],"/Users/dmitry/Web/react-hooks/src/components/TopBar/index.js",[],"/Users/dmitry/Web/react-hooks/src/pages/article/index.js",[],"/Users/dmitry/Web/react-hooks/src/pages/golobalFeed/index.js",[],"/Users/dmitry/Web/react-hooks/src/pages/authentication/index.js",["42","43","44"],"import React,{useState, useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\n\nconst Authentication = (props) => {\n    const isLogin = props.match.path === \"/login\"\n    const pageTitle = isLogin ? 'Вход' : 'Регистрация'\n    const descriptionLink = isLogin ? '/register' : '/login'\n    const descriptionText = isLogin ? 'Нет аккаунта?' : 'Уже есть аккаунт?'\n    const apiUrl = isLogin ? '/users/login' : '/users'\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [{response,isLoading,error}, doFetch] = useFetch(apiUrl)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const user = isLogin ? {email,password} : {email, password, username}\n        doFetch({\n            method: 'post',\n            data: {\n                user\n                }\n\n        })\n    }\n\n    return (\n      <div className=\"auth-page\">\n          <div className=\"container page\">\n              <div className=\"row\">\n                  <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                      <h1 className=\"text-xs-center\">\n                          {pageTitle}\n                      </h1>\n                      <p className=\"text-xs-center\">\n                          <Link to={descriptionLink}>{descriptionText}</Link>\n                      </p>\n                      <form onSubmit={handleSubmit}>\n                          <fieldset>\n                              {!isLogin && (\n                                  <fieldset className='form-group'>\n                                      <input type='text'\n                                             placeholder='Имя пользователя'\n                                             className='form-control form-control-lg'\n                                             value={username}\n                                             onChange={e => setUsername(e.target.value)}\n                                      />\n                                  </fieldset>\n                              )}\n                              <fieldset className='form-group'>\n                                  <input type='email'\n                                         placeholder='email'\n                                         className='form-control form-control-lg'\n                                         value={email}\n                                         onChange={e => setEmail(e.target.value)}\n                                  />\n                              </fieldset>\n                              <fieldset className='form-group'>\n                                  <input type='password'\n                                         placeholder='password'\n                                         className='form-control form-control-lg'\n                                         value={password}\n                                         onChange={e => setPassword(e.target.value)}\n                                  />\n                              </fieldset>\n                              <button className='btn btn-lg btn-primary pull-xs-right'\n                              type='submit' disabled={isLoading}\n                              >{pageTitle}</button>\n                          </fieldset>\n                      </form>\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n}\n\nexport default Authentication",["45","46"],"/Users/dmitry/Web/react-hooks/src/hooks/useFetch.js",["47","48"],"import {useState,useEffect} from 'react'\nimport axios from \"axios\";\n\nexport default url => {\n    const baseUrl = 'https://conduit.productionready.io/api'\n    const [isLoading, setIsLoading] = useState(false)\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [options, setOptions] = useState({})\n\n    const doFetch = (options={}) => {\n        setOptions(options)\n        setIsLoading(true)\n    }\n\n    useEffect(()=> {\n        if (!isLoading){\n            return\n        }\n        axios(baseUrl+url, options).then(res => {\n                console.log(\"sucsess\",res)\n                setIsLoading(false)\n            setResponse(res.data)\n            }\n        ).catch(err => {\n            console.log(\"error\", err)\n            setIsLoading(false)\n            setError(err.response.data)\n        })\n    }, [isLoading])\n\n    return [{isLoading, response, error}, doFetch]\n}",{"ruleId":"49","severity":1,"message":"50","line":7,"column":1,"nodeType":"51","endLine":14,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":1,"column":25,"nodeType":"54","messageId":"55","endLine":1,"endColumn":34},{"ruleId":"52","severity":1,"message":"56","line":14,"column":13,"nodeType":"54","messageId":"55","endLine":14,"endColumn":21},{"ruleId":"52","severity":1,"message":"57","line":14,"column":32,"nodeType":"54","messageId":"55","endLine":14,"endColumn":37},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":1,"nodeType":"51","endLine":33,"endColumn":2},{"ruleId":"62","severity":1,"message":"63","line":30,"column":8,"nodeType":"64","endLine":30,"endColumn":19,"suggestions":"65"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'error' is assigned a value but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [isLoading, options, url]",{"range":"71","text":"72"},[857,868],"[isLoading, options, url]"]